/*1 - Inclua o campo criadoPor em todos os documentos, colocando "Ronald McDonald" no valor desse campo.
Para isso, escreva no arquivo desafio1.js duas queries, nesta ordem:

Crie uma query que adicione o campo criadoPor em todos os documentos, colocando "Ronald McDonald" 
no valor desse campo.

Crie uma query que retorne o nome e criadoPor de todos os produtos.*/

db.produtos.find();

db.produtos.updateMany({}, { $set: { criadoPor: "Ronald McDonald" } });
db.produtos.find({}, { _id: 0, nome: 1, criadoPor: 1 });


/*2 - Inclua o campo valorUnitario em todos os documentos em que esse campo não existe e atribua a 
ele o valor "0.00", com o tipo NumberDecimal.

Para isso, escreva no arquivo desafio2.js duas queries, nesta ordem:

Crie uma query que adicione o campo valorUnitario em todos os documentos em que esse campo não existe e atribua a ele o valor "0.00", com o tipo NumberDecimal.

Crie uma query que retorne o nome e valorUnitario de todos os produtos.

*/

db.produtos.updateMany({}, { $set: { valorUnitario: NumberDecimal("0.00") }});
db.produtos.find({}, { _id: 0, nome: 1, valorUnitario: 1 });

/*3 - Adicione o campo avaliacao em todos os documentos da coleção e efetue alterações nesse campo.
Para isso, escreva no arquivo desafio3.js quatro queries, nesta ordem:

Crie uma query que inclua o campo avaliacao do tipo NumberInt e com o valor 0 em todos os documentos da coleção.

Crie uma query que incremente o valor do campo avaliacao em 5 em todos os sanduíches de carne do tipo bovino. Dica: utilize como filtro o campo tags.

Crie uma query que incremente o valor do campo avaliacao em 3 em todos os sanduíches de ave.

Crie uma query que retorne o nome e avaliacao de todos os sanduíches.*/

db.produtos.updateMany({}, { $set: { avaliacao: NumberInt("0")} });
db.produtos.updateMany({ tags: "bovino" }, { $inc: { avaliacao: 5 } });
db.produtos.updateMany({ tags: "ave" }, { $inc: { avaliacao: 3 } });
db.produtos.find({}, { _id: 0, nome: 1, avaliacao: 1 });


/*4 - Atribua a data corrente ao campo ultimaModificacao no sanduíche Big Mac.
Para isso, escreva no arquivo desafio4.js duas queries, nesta ordem:

Crie uma query que atribua a data corrente ao campo ultimaModificacao no sanduíche Big Mac.
Para a data corrente faça uso do tipo Date.

Crie uma query que retorne o nome de todos os documentos em que o campo ultimaModificacao existe.*/

db.produtos.updateOne({ nome: "Big Mac" }, { $currentDate: { lastModified: true, ultimaModificacao: { $type: "date" } } });
db.produtos.find({ ultimaModificacao: { $exists: true} }, { _id: 0, nome: 1});

/*5 - Adicione ketchup aos ingredientes para todos os sanduíches menos o McChicken, garantindo que não
haja duplicidade nos ingredientes.

Para isso, escreva no arquivo desafio5.js duas queries, nesta ordem:

Crie uma query que adicione ketchup aos ingredientes para todos os sanduíches menos o McChicken, garantindo
que não haja duplicidade nos ingredientes.

Crie uma query que retorne o nome e ingredientes de todos os documentos.*/

db.produtos.updateMany({ nome: { $nin: ["McChicken"] } }, { $addToSet: { ingredientes: "ketchup" } });
db.produtos.find({}, { _id: 0, nome: 1, ingredientes: 1 });


/*6 - Inclua bacon no final da lista de ingredientes dos sanduíches Big Mac e Quarteirão com Queijo.
Para isso, escreva no arquivo desafio6.js duas queries, nesta ordem:

Crie uma query que faça a inclusão de bacon no final da lista de ingredientes dos sanduíches Big Mac 
e Quarteirão com Queijo.

Crie uma query que retorne o nome e ingredientes de todos os documentos.*/

db.produtos.updateMany({ nome: { $in: ["Big Mac", "Quarteirão com Queijo"] } }, { $push: { ingredientes: "bacon"}});
db.produtos.find({}, { _id: 0, nome: 1, ingredientes: 1});

/*7 - Remova o item cebola de todos os sanduíches.
Para isso, escreva no arquivo desafio7.js duas queries, nesta ordem:

Crie uma query que faça a remoção do item cebola em todos os sanduíches.

Crie uma query que retorne o nome e ingredientes de todos os documentos.*/

db.produtos.updateMany({}, { $pull: { ingredientes: "cebola"} });
db.produtos.find({}, { _id: 0, nome: 1, ingredientes: 1});

/*8 - Remova o primeiro ingrediente do sanduíche Quarteirão com Queijo.
Para isso, escreva no arquivo desafio8.js duas queries, nesta ordem:

Crie uma query que faça a remoção do primeiro ingrediente no sanduíche Quarteirão com Queijo.

Crie uma query que retorne o nome e ingredientes de todos os documentos.*/

db.produtos.updateOne({ nome: "Quarteirão com Queijo" }, { $pop: { ingredientes: -1 } });
db.produtos.find({}, { _id: 0, nome: 1, ingredientes: 1});

/*9 - Remova o último ingrediente do sanduíche Cheddar McMelt.
Para isso, escreva no arquivo desafio9.js duas queries, nesta ordem:

Crie uma query que faça a remoção do último ingrediente no sanduíche Cheddar McMelt.

Crie uma query que retorne o nome e ingredientes de todos os documentos.*/

db.produtos.updateOne({ nome: "Cheddar McMelt" }, { $pop: { ingredientes: 1 } });
db.produtos.find({}, { _id: 0, nome: 1, ingredientes: 1});

/*10 - Adicione a quantidade de vendas dos sanduíches por dia da semana.
Para isso, escreva no arquivo desafio10.js quatro queries, nesta ordem:

Crie uma query que inclua um array com sete posições em todos os sanduíches. Cada uma delas representará
 um dia da semana, e cada posição iniciará em 0. O array deve se parecer como abaixo:

"vendasPorDia": [0, 0, 0, 0, 0, 0, 0]

O primeiro item desse array representa as vendas no domingo, o segundo item representa as vendas na
 segunda-feira, e assim até chegar ao último item, que representa as vendas no sábado.

Crie uma query que incremente as vendas de Big Mac às quartas-feiras em 60.

Crie uma query que incremente as vendas de todos os sanduíches de carne do tipo bovino e pão aos sábados
 em 120.

Crie uma query que retorne o nome e vendasPorDia de todos os documentos.*/

db.produtos.updateMany({}, { $set: { vendasPorDia: [0, 0, 0, 0, 0, 0, 0] } });
db.produtos.updateOne({ nome: "Big Mac" }, { $inc: { "vendasPorDia.3": 60 } });
db.produtos.updateOne({ tags: { $all: ["bovino", "pão"] } }, { $inc: { "vendasPorDia.6": 120 } });
db.produtos.find({}, { _id: 0, nome: 1, vendasPorDia: 1 });
